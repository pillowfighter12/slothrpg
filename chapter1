import sys
from monsters import enemies_copy, MonsterManager
from sloth import mainsloth 
from fight_sequence_random import fight_simulation

def main():
    
    sloth_name = input("Enter your sloth name:")
    sloth = mainsloth(sloth_name, "Nomad")
    print(f"Welcome {sloth_name}")
    welcome_message()
    path = path_choice()
    if path == "A":
        enter_cave(sloth)
    else: 
        sys.exit()


def welcome_message():
    type_a = "\u0332".join("Type A:")
    type_b = "\u0332".join("Type B:")
    print(f"""You startle as you awaken on the ground with a broken branch next to you.
As you cumbersously investigate your surroundings you come across some foot prints and begin to follow.
Eventually you come across two pathes.
What would you like to do?
{type_a} +   To follow the path going towards the cave.
{type_b} +   To go back to sleep""")

def path_choice():
    while True:
        input_choice = input()
        if input_choice not in ["A", "B"]:
            print("Invalid input")
        else:
            return input_choice
    

def enter_cave(sloth):
    cave_chest = False
    
    monster_selection = MonsterManager(enemies_copy)  # use the copy of the enemies list
    enemy_counter = 0
    enemy_index = monster_selection.cave_enemy_selection()
    enemy = monster_selection._enemies[enemy_index]["monster"]

    fight_sim = fight_simulation(enemy, sloth, enemy_index, enemy_counter)

    enemy_counter = fight_sim.time_lapse(
        monster_selection._enemies[enemy_index]["time_lapse_min_value"],
        monster_selection._enemies[enemy_index]["time_lapse_max_value"],
        monster_selection._enemies[enemy_index]["encounter_chance"],
    )

    while cave_chest is not True:
        enemy_index = monster_selection.cave_enemy_selection()
        enemy = monster_selection._enemies[enemy_index]["monster"]
        fight_sim = fight_simulation(enemy, sloth, enemy_index, enemy_counter)

        enemy_counter = fight_sim.time_lapse(
            monster_selection._enemies[enemy_index]["time_lapse_min_value"],
            monster_selection._enemies[enemy_index]["time_lapse_max_value"],
            monster_selection._enemies[enemy_index]["encounter_chance"],
        )

        print(f"You have encountered {enemy_counter} enemies")
        sloth._inventory.inv_options(sloth)




main()
