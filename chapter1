import random
import time
from monsters import monster
from sloth import create_sloth
from inventory_potions_weapons import potion
from inventory_potions_weapons import inventory
from inventory_potions_weapons import potions
from inventory_potions_weapons import weapon


s_inventory = inventory()

def main():
    #sloth name is global so that you can recall it many places without having to pass the variable .   
    global s_inventory
    global sloth_name

    sloth_name = input("Enter your sloth name:")
    sloth = create_sloth(sloth_name, 100, 100, 20)
    print("Welcome " + sloth_name)
    welcome_message()
    path = path_choice()
    if path == 'A':
        enter_cave(sloth, s_inventory)
    elif path == 'B':
        follow_river(sloth)

def welcome_message():
    print('You startle as you awaken on the ground with a broken branch next to you.')
    print('As you cumbersously investigate your surroundings you come across some foot prints and begin to follow.')
    print('Eventually you come across two pathes.')
    print('What path should you follow?')
    print("\u0332".join('Type A:') + (' To follow the path going towards the cave.'))
    print("\u0332".join('Type B:') + (' To follow the path that follows the river.'))
    

def path_choice():
    while True:
        input_choice = input()
        if input_choice not in ['A', 'B']:
            print("Invalid input")
        else:
            return input_choice
        
def enter_cave(sloth, s_inventory):

    enemy_counter = 0
    print('The cave seemed to be emitting something from within.')
    if enemy_counter == 0:
        enemy = monster("Cave Spider", 50, 15)
        encounter_chance = 0.6
        print("The cave continues to get darker the deeper you go in")
        enemy_counter = time_lapse(10, 20, encounter_chance, enemy, sloth, enemy_counter)
        print("You have encountered " + str(enemy_counter) + " enemys")
        print("After defeating the cave spider you found a torch and some armor")
        
    if enemy_counter == 1:
        enemy = monster("Cave Spider", 50, 25)
        encounter_chance = 0.6
        print("The cave continues to get darker the deeper you go in")
        enemy_counter = time_lapse(10, 20, encounter_chance, enemy, sloth, enemy_counter)
        print("After fending off the second Cave Spider you found a small elixer of life!")
        small_elixer = potions["small_elixer"]
        s_inventory.add_item(small_elixer)
        print("Small elixer was added to your inventory!")


    #I want to add a lot more modularity here in the future just testing things currently

    while True:
        print("What would you like to do? A: Access your inventory? B: Take some time to rest? C: Continue into the cave?")
        input_choice = input()
        if input_choice == "A":
            print("Would you like to access your A. weapons or B. potions?")
            inventory_choice = input()
            if inventory_choice == "A":
                print("Not available at this time")
            elif inventory_choice == "B":
                s_inventory.potion_list()

                        
                        

        elif input_choice == "B":
            print("You decided to lay next to a rock in a dangerous cave")
            print("Luckily no monsters snuck up on you")
            sloth.hp = sloth.maxhp
            print("Your health is now back to " + str(sloth.maxhp))

        elif input_choice == "C":
            print("You decided to go deeper into uthe cave")
            break



    if enemy_counter == 2:
        enemy = monster("Black Widow", 1000,49)
        encounter_chance = 1
        print("You get to the end of the cave and a MASSIVE spider appears")
        enemy_counter = time_lapse(10, 20, encounter_chance, enemy, sloth, enemy_counter)
        print("You have encountered " + str(enemy_counter) + " enemys")
        print(enemy_counter)


def follow_river(sloth, s_inventory): 
    enemy = monster("Crocodile", 500)
    encounter_chance = 1                
    print('You followed the footsteps to the river')
    time_lapse(5, 15, encounter_chance, enemy, sloth) 

# Used to generate a random fight encounter in the cave 

def time_lapse(min_time, max_time, encounter_chance, enemy, sloth, enemy_counter,):
    global inventory
    for i in range(random.randint(min_time, max_time)):
        print(" . . . ")
        time.sleep(1)
        chance = random.random()
        print(chance)
        if chance < encounter_chance and enemy:
            enemy_counter += 1
            print("A", enemy.name, "approaches!")
            if engage_fight(enemy, sloth, s_inventory):
                enemy = None
                print(enemy_counter)
                return enemy_counter
        else:
            print("You didn't encounter any enemies")
    return enemy_counter



def engage_fight(enemy, sloth, s_inventory):
    global inventory
    print("You have encountered a enemy!", enemy.name)
    damage = sloth.damage
    damange_taken = enemy.damage
    while sloth.hp > 0 and enemy.hp > 0:
        print("What would you like to do? ")

        choice = input()
        while choice not in ['A', 'B', 'C']:
            print("Input must be A, B, or 'C")

        if choice == 'A':
            enemy.hp -= damage
            print("You deal", damage, "damage to the", enemy.name)
            damage_taken = enemy.damage
            sloth.hp -= damage_taken
            print("You have taken", damage_taken, " damage to the face")
            print(sloth.name, sloth.hp)
            print(str(enemy.name) + " " + str(enemy.hp))
            if enemy.hp <= 0:
                print("You defeated the " + enemy.name)
                print("******************")
                return True
            elif sloth.hp <= 0:
                print(sloth.name + " has fainted")
                return True
            
            elif sloth.hp <= 0 and enemy.hp <= 0:
                print("You have both fainted!")
                
    return False


main()