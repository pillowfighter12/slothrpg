import random
import time
import sys
from monsters import *
from sloth import *
from inventory_potions_weapons import *
from inventory_potions_weapons import *
from inventory_potions_weapons import *
from inventory_potions_weapons import *
from fight_sequence import *


s_inventory = inventory()


def main():
    #sloth name is global so that you can recall it many places without having to pass the variable .   
    sloth_name = input("Enter your sloth name:")
    sloth = mainsloth(name=sloth_name, maxhp=100, hp=100, damage=20)
    print(f"Welcome {sloth_name}")
    welcome_message()
    path = path_choice()
    if path == "A":
        enter_cave(sloth)
    else: 
        sys.exit()


def welcome_message():
    type_a = "\u0332".join("Type A:")
    type_b = "\u0332".join("Type B:")
    print(f"""You startle as you awaken on the ground with a broken branch next to you.
As you cumbersously investigate your surroundings you come across some foot prints and begin to follow.
Eventually you come across two pathes.
What would you like to do?
{type_a} +   To follow the path going towards the cave.
{type_b} +   To go back to sleep""")


def path_choice():
    while True:
        input_choice = input()
        if input_choice not in ["A", "B"]:
            print("Invalid input")
        else:
            return input_choice
    

def enter_cave(sloth):
    # Forced Enemy Encounter
    enemy_index = 0
    enemy = enemies[enemy_index]["monster"]
    enemy_counter = 0

    # Forced Enemy encounter block
    print(enemies[enemy_counter]["pre_encounter_message"])
    enemy_counter = time_lapse(
        enemies[enemy_counter]["time_lapse_min_value"],
        enemies[enemy_counter]["time_lapse_max_value"],
        enemies[enemy_counter]["encounter_chance"],
        enemy,
        sloth,
        enemy_counter,
    )
    print(f"You have encountered {enemy_counter} enemies")
    print(enemies[enemy_counter]["after_encounter_message"])

    # Inventory Access
    s_inventory.inv_options(sloth)

    # Random Enemy encounters
    for i in range(2):
        # Function that selects a random enemy from the enemies dictionary
        enemy_index = cave_enemy_selection(enemies)
        enemy = enemies[enemy_index]["monster"]

        # Enemy encounter block
        print("The cave seemed to be emitting something from within.")
        print(enemies[enemy_index]["pre_encounter_message"])
        enemy_counter = time_lapse(
            enemies[enemy_index]["time_lapse_min_value"],
            enemies[enemy_index]["time_lapse_max_value"],
            enemies[enemy_index]["encounter_chance"],
            enemy,
            sloth,
            enemy_counter,
        )
        print(f"You have encountered {enemy_counter} enemies")
        print(enemies[enemy_index]["after_encounter_message"])

        # Inventory Access
        s_inventory.inv_options(sloth)



# Used to generate a random fight encounter in the cave 

def time_lapse(min_time, max_time, encounter_chance, enemy, sloth, enemy_counter,):
    for i in range(random.randint(min_time, max_time)):
        print(" . . . ")
        time.sleep(1)
        chance = random.random()
        if chance <= encounter_chance or not enemy:
            print("You didn't encounter any enemies")
            continue
        print("A", enemy.name, "approaches!")
        enemy_counter += 1
        engage_fight(enemy, sloth, enemy_counter)
        print(enemy_counter)
        return enemy_counter
    




        



    # damage = sloth.damage
    # damage_taken = enemy.damage
    # while sloth.hp > 0 and enemy.hp > 0:
    #     print("What would you like to do? ")

    #     choice = input()
    #     if choice not in ["A", "B"]:
    #         print("Input must be A or B")

    #     if choice == "A":
    #         enemy.hp -= damage
    #         print("You deal", damage, "damage to the", enemy.name)
    #         damage_taken = enemy.damage
    #         sloth.hp -= damage_taken
    #         print("You have taken", damage_taken, " damage to the face")
    #         print(sloth.name, sloth.hp)
    #         print(str(enemy.name) + " " + str(enemy.hp))
    #         if enemy.hp <= 0 and sloth.hp > 0:
    #             print("You defeated the " + enemy.name)
    #             print("******************")
    #             return True
    #         elif enemy.hp > 0 and sloth.hp <= 0:
    #             print(sloth.name + " has fainted and you must go back to the start")
    #             main()
    #             return True
            
    #         elif sloth.hp <= 0 and enemy.hp <= 0:
    #             print("You have both fainted and you must go back to the start!")
    #             main()
    #             return True
    #     if choice == "B":
    #         print("Attempting to run away...")
    #         chance = random.random()
    #         if chance <= enemies[enemy_index]["run_chance"]:
    #             print("You have successfully ran away")
    #             return False
    #         else:
    #             enemy.hp -= damage
    #             print("You deal", damage, "damage to the", enemy.name)
    #             damage_taken = enemy.damage
    #             sloth.hp -= damage_taken
    #             print("You have taken", damage_taken, " damage to the face")
    #             print(sloth.name, sloth.hp)
    #             print(str(enemy.name) + " " + str(enemy.hp))
    #             if enemy.hp <= 0 and sloth.hp > 0:
    #                 print("You defeated the " + enemy.name)
    #                 print("******************")
    #                 return True
    #             elif enemy.hp > 0 and sloth.hp <= 0:
    #                 print(sloth.name + " has fainted and you must go back to the start")
    #                 main()
    #                 return True
                

main()