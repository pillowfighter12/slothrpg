import random
import time
import sys
from monsters import enemies, cave_enemy_selection
from sloth import mainsloth 
from inventory_potions_weapons import inventory
from fight_sequence import fight_simulation

s_inventory = inventory()

def main():
    
    sloth_name = input("Enter your sloth name:")
    sloth = mainsloth(sloth_name, "Nomad")
    print(f"Welcome {sloth_name}")
    welcome_message()
    path = path_choice()
    if path == "A":
        enter_cave(sloth)
    else: 
        sys.exit()


def welcome_message():
    type_a = "\u0332".join("Type A:")
    type_b = "\u0332".join("Type B:")
    print(f"""You startle as you awaken on the ground with a broken branch next to you.
As you cumbersously investigate your surroundings you come across some foot prints and begin to follow.
Eventually you come across two pathes.
What would you like to do?
{type_a} +   To follow the path going towards the cave.
{type_b} +   To go back to sleep""")


def path_choice():
    while True:
        input_choice = input()
        if input_choice not in ["A", "B"]:
            print("Invalid input")
        else:
            return input_choice
    

def enter_cave(sloth):
    # Forced Enemy Encounter
    enemy_index = 0
    enemy_counter = 0
    enemy = enemies[enemy_counter]["monster"]

    # Forced Enemy encounter block

    fight_sim = fight_simulation(enemy, sloth, enemy_index, enemy_counter)


    enemy_counter = fight_sim.time_lapse(
        enemies[enemy_counter]["time_lapse_min_value"],
        enemies[enemy_counter]["time_lapse_max_value"],
        enemies[enemy_counter]["encounter_chance"],
    )
    
    # Inventory Access
    s_inventory.inv_options(sloth)

    # Random Enemy encounters
    while cave_chest is not True:
        cave_chest = False
        enemy_index = cave_enemy_selection(enemies)
        enemy = enemies[enemy_index]["monster"]
        fight_sim = fight_simulation(enemy, sloth, enemy_index, enemy_counter)

        print(f"The chance of escaping was {enemies[enemy_index]['run_chance']}")

        # Enemy encounter block
        enemy_counter = fight_sim.time_lapse(
            enemies[enemy_index]["time_lapse_min_value"],
            enemies[enemy_index]["time_lapse_max_value"],
            enemies[enemy_index]["encounter_chance"],
        )

        print(f"You have encountered {enemy_counter} enemies")
        print(enemies[enemy_index]["after_encounter_message"])

        # Inventory Access
        s_inventory.inv_options(sloth)

    

main()
